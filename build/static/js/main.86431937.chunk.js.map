{"version":3,"sources":["DataContext.js","components/WeatherIcon.js","components/WeatherDetails.js","components/Wind.js","components/TimeDisplay.js","components/Humidity.js","services/timezone.js","components/Timezone.js","DataDisplay.js","services/weather.js","components/Form.js","App.js","index.js"],"names":["DataContext","createContext","DataProvider","props","useState","data","setData","Provider","value","children","WeatherIcon","useContext","Icon","weather","main","icon","id","className","description","WeatherDetails","roundFix","number","precision","multi","Math","pow","round","toFixed","temp","feels_like","Wind","wind","speed","tzlookup","require","TimeDisplay","format","ticking","timezone","coord","lat","lon","Humidity","humidity","text","styles","buildStyles","rotation","strokeLinecap","textSize","pathTransitionDuration","pathColor","textColor","trailColor","backgroundColor","Timezone","TimezoneUTC","timezoneReturn","timezoneService","DataDisplay","DataRender","hasOwnProperty","name","sys","country","API_KEY","process","cityID","console","log","axios","get","then","response","Form","selectedCity","setSelectedCity","cityOptions","setcityOptions","cityInputText","setcityInputText","options","Autocomplete","key","CountryList","getOptionLabel","option","renderInput","params","TextField","label","variant","onChange","e","v","CityList","map","result","abbreviation","push","inputValue","onInputChange","indexOf","cityChange","Button","color","onClick","weatherService","weatherData","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86431937.chunk.js","sourcesContent":["import React, { useState, createContext } from \"react\";\r\nimport \"./App.css\";\r\n\r\nexport const DataContext = createContext();\r\n\r\nexport const DataProvider = (props) => {\r\n  const [data, setData] = useState([]);\r\n\r\n  return (\r\n    <DataContext.Provider value={[data, setData]}>\r\n      {props.children}\r\n    </DataContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { DataContext } from \"../DataContext\";\r\nimport {\r\n  WiDayThunderstorm,\r\n  WiNightThunderstorm,\r\n  WiDaySprinkle,\r\n  WiNightAltSprinkle,\r\n  WiDayRain,\r\n  WiNightAltRain,\r\n  WiDaySnow,\r\n  WiNightAltSnow,\r\n  WiDayCloudy,\r\n  WiNightAltCloudy,\r\n  WiDaySunny,\r\n  WiNightClear,\r\n} from \"react-icons/wi\";\r\n\r\nfunction WeatherIcon() {\r\n  const [data, setData] = useContext(DataContext);\r\n\r\n  /*Determines the weather icon to display depending on the conditions and time of day provided by the api request */\r\n  const Icon = () => {\r\n    if (data.weather[0].main === \"Clear\") {\r\n      if (data.weather[0].icon[2] === \"d\")\r\n        return <WiDaySunny id=\"weatherIcon\" />;\r\n      else return <WiNightClear id=\"weatherIcon\" />;\r\n    } else if (data.weather[0].main === \"Clouds\") {\r\n      if (data.weather[0].icon[2] === \"d\")\r\n        return <WiDayCloudy id=\"weatherIcon\" />;\r\n      else return <WiNightAltCloudy id=\"weatherIcon\" />;\r\n    } else if (data.weather[0].main === \"Snow\") {\r\n      if (data.weather[0].icon[2] === \"d\")\r\n        return <WiDaySnow id=\"weatherIcon\" />;\r\n      else return <WiNightAltSnow id=\"weatherIcon\" />;\r\n    } else if (data.weather[0].main === \"Rain\") {\r\n      if (data.weather[0].icon[2] === \"d\")\r\n        return <WiDayRain id=\"weatherIcon\" />;\r\n      else return <WiNightAltRain id=\"weatherIcon\" />;\r\n    } else if (data.weather[0].main === \"Drizzle\") {\r\n      if (data.weather[0].icon[2] === \"d\")\r\n        return <WiDaySprinkle id=\"weatherIcon\" />;\r\n      else return <WiNightAltSprinkle id=\"weatherIcon\" />;\r\n    } else if (data.weather[0].main === \"Thunderstorm\") {\r\n      if (data.weather[0].icon[2] === \"d\")\r\n        return <WiDayThunderstorm id=\"weatherIcon\" />;\r\n      else return <WiNightThunderstorm id=\"weatherIcon\" />;\r\n    } else return null;\r\n  };\r\n  return (\r\n    <div className=\"infoBlock\" id=\"weatherIconDescription\">\r\n      <Icon />\r\n      <h1 className=\"blockTitle\">{data.weather[0].description}</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WeatherIcon;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { DataContext } from \"../DataContext\";\r\n\r\nfunction WeatherDetails() {\r\n  const [data, setData] = useContext(DataContext);\r\n\r\n  /*Float formating for temperature display*/\r\n\r\n  function roundFix(number, precision) {\r\n    var multi = Math.pow(10, precision);\r\n    return Math.round((number * multi).toFixed(precision + 1)) / multi;\r\n  }\r\n\r\n\r\n  return (\r\n    <div id=\"weatherDisplay\" className=\"infoBlock\">\r\n      <h1 className=\"blockTitle\">\r\n        Temperature:\r\n      </h1>\r\n      <h1 className=\"dataContent\">\r\n        {roundFix(data.main.temp - 273.15, 1)}℃\r\n      </h1>\r\n      <h1 className=\"blockTitle\">\r\n        Feels like: \r\n      </h1>\r\n      <h1 className=\"dataContent\">\r\n        {roundFix(data.main.feels_like - 273.15, 1)}℃\r\n      </h1>\r\n    </div>\r\n  );\r\n}\r\nexport default WeatherDetails;\r\n","import React, { useContext } from \"react\";\r\nimport { DataContext } from \"../DataContext\";\r\n\r\nfunction Wind() {\r\n  const [data, setData] = useContext(DataContext);\r\n\r\n  return (\r\n    <div id=\"windContainer\" className=\"infoBlock\">\r\n      <h1 className=\"blockTitle\">Wind Speed:</h1>\r\n      <h3 className=\"dataContent\">{data.wind.speed} Meter/sec</h3>\r\n    </div>\r\n  );\r\n}\r\nexport default Wind;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { DataContext } from \"../DataContext\";\r\nimport Clock from \"react-live-clock\";\r\nvar tzlookup = require(\"tz-lookup\");\r\n\r\nfunction TimeDisplay() {\r\n  const [data, setData] = useContext(DataContext);\r\n\r\n  /*Converts timezone result from the API to UTC*/\r\n  const TimezoneUTC = () => {\r\n    var timezone = data.timezone / 60 / 60;\r\n    var timezoneReturn;\r\n    if (data.timezone >= 0) timezoneReturn = \"UTC + \" + timezone;\r\n    else timezoneReturn = \"UTC \" + timezone;\r\n    return timezoneReturn;\r\n  };\r\n\r\n    return (\r\n      <div id=\"timeContainer\" className=\"infoBlock\">\r\n          <h1 className=\"blockTitle\">Local time</h1>\r\n          <Clock\r\n            className=\"dataContent\"\r\n            format={\"HH:mm:ss\"}\r\n            ticking={true}\r\n            timezone={tzlookup(data.coord.lat, data.coord.lon)}\r\n          />\r\n      </div>\r\n    );\r\n  }\r\n  export default TimeDisplay;","import React, { useContext } from \"react\";\r\nimport { DataContext } from \"../DataContext\";\r\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\n\r\nfunction Humidity() {\r\n  const [data, setData] = useContext(DataContext);\r\n\r\n  return (\r\n    <div id=\"humidityDisplay\" className=\"infoBlock\">\r\n      <h1 className=\"blockTitle\" id=\"humidityTitle\">\r\n        Humidity\r\n      </h1>\r\n      <CircularProgressbar\r\n        id=\"humidityBar\"\r\n        value={data.main.humidity}\r\n        text={`${data.main.humidity}%`}\r\n        styles={buildStyles({\r\n          // Rotation of path and trail, in number of turns (0-1)\r\n          rotation: 0.25,\r\n\r\n          // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n          strokeLinecap: \"butt\",\r\n\r\n          // Text size\r\n          textSize: \"20px\",\r\n\r\n          // How long animation takes to go from one percentage to another, in seconds\r\n          pathTransitionDuration: 2,\r\n\r\n          // Can specify path transition in more detail, or remove it entirely\r\n          // pathTransition: 'none',\r\n\r\n          // Colors\r\n          pathColor: \"#877EBF\",\r\n          textColor: \"#3e328c\",\r\n          trailColor: \"#d6d6d6\",\r\n          backgroundColor: \"#3e98c7\",\r\n        })}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default Humidity;\r\n","var tzlookup = require(\"tz-lookup\");\r\n\r\nconst getTimezone = (data) => {\r\n  return tzlookup(data.coord.lat, data.coord.lon);\r\n};\r\n\r\nexport default { getTimezone };\r\n","import React, { useContext } from \"react\";\r\nimport { DataContext } from \"../DataContext\";\r\nimport timezoneService from \"../services/timezone\";\r\n\r\nfunction Timezone() {\r\n  const [data, setData] = useContext(DataContext);\r\n\r\n  /*Converts timezone result from the API to UTC*/\r\n  const TimezoneUTC = () => {\r\n    var timezone = data.timezone / 60 / 60;\r\n    var timezoneReturn;\r\n    if (data.timezone >= 0) timezoneReturn = \"UTC + \" + timezone;\r\n    else timezoneReturn = \"UTC \" + timezone;\r\n    return <div className=\"dataContent\">{timezoneReturn}</div>;\r\n  };\r\n\r\n  return (\r\n    <div id=\"timezoneContainer\" className=\"infoBlock\">\r\n      <h1 className=\"blockTitle\">Timezone</h1>\r\n      <h3 className=\"dataContent\" id=\"timezoneName\">\r\n        ({timezoneService.getTimezone(data)})\r\n      </h3>\r\n      <TimezoneUTC />\r\n    </div>\r\n  );\r\n}\r\nexport default Timezone;\r\n","import React, { useContext } from \"react\";\r\nimport { DataContext } from \"./DataContext\";\r\nimport WeatherIcon from \"./components/WeatherIcon.js\";\r\nimport WeatherDetails from \"./components/WeatherDetails.js\";\r\nimport Wind from \"./components/Wind\";\r\nimport TimeDisplay from \"./components/TimeDisplay\";\r\nimport Humidity from \"./components/Humidity\";\r\nimport Timezone from \"./components/Timezone\";\r\n\r\nfunction DataDisplay() {\r\n  const [data, setData] = useContext(DataContext);\r\n\r\n  /*Displays the data state only if not empty*/\r\n  const DataRender = () => {\r\n    return data.hasOwnProperty(\"name\") ? (\r\n      <div>\r\n        <h1 className=\"cityName\">\r\n          {data.name} , {data.sys.country}\r\n        </h1>\r\n\r\n        <div id=\"displayContainer\">\r\n          <WeatherIcon />\r\n          <WeatherDetails />\r\n          <Wind />\r\n          <Humidity />\r\n          <TimeDisplay />\r\n          <Timezone />\r\n        </div>\r\n      </div>\r\n    ) : (\r\n      <div id=\"emptyDisplayContainer\">\r\n        <h1>Choose a country and city to see the magic</h1>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return <DataRender />;\r\n}\r\nexport default DataDisplay;\r\n","import axios from \"axios\";\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nconst getWeatherData = (cityID) => {\r\n  console.log(\"key\" + API_KEY);\r\n  const request = axios.get(\r\n    `https://api.openweathermap.org/data/2.5/weather?id=${cityID}&appid=${API_KEY}`\r\n  );\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default { getWeatherData };\r\n","import React, { useState, useContext } from \"react\";\r\nimport { DataContext } from \"../DataContext\";\r\nimport weatherService from \"../services/weather\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport CityList from \"../city.list.min\";\r\nimport CountryList from \"../countries\";\r\n\r\nfunction Form() {\r\n  const [data, setData] = useContext(DataContext);\r\n  const [selectedCity, setSelectedCity] = useState(0);\r\n  const [cityOptions, setcityOptions] = useState([]);\r\n  const [cityInputText, setcityInputText] = useState(\"\");\r\n\r\n  let options = [];\r\n  function setOptions(country) {\r\n    setcityInputText(\"\");\r\n    setcityOptions([]);\r\n\r\n    if (country != null) {\r\n      CityList.map((result) =>\r\n        result.country === country.abbreviation ? options.push(result) : null\r\n      );\r\n      setcityOptions(options);\r\n      console.log(options);\r\n    }\r\n  }\r\n\r\n  function cityChange(v) {\r\n    /*Checks if the input is not empty before changing states to avoid errors*/\r\n    if (cityOptions.indexOf(v) !== -1) {\r\n      setcityInputText(v.name);\r\n      setSelectedCity(v);\r\n    }\r\n  }\r\n\r\n  function setWeather() {\r\n    if (selectedCity !== 0)\r\n      weatherService.getWeatherData(selectedCity.id).then((weatherData) => {\r\n        setData(weatherData);\r\n        setcityInputText(\"\");\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div id=\"formContainer\">\r\n      <form>\r\n        <Autocomplete\r\n          className=\"autocomplete\"\r\n          key={\"countries\"}\r\n          id=\"countryList\"\r\n          options={CountryList}\r\n          getOptionLabel={(option) => option.country}\r\n          renderInput={(params) => (\r\n            <TextField {...params} label=\"Country\" variant=\"outlined\" />\r\n          )}\r\n          onChange={(e, v) => setOptions(v)}\r\n        />\r\n        <Autocomplete\r\n          className=\"autocomplete\"\r\n          inputValue={cityInputText}\r\n          onInputChange={(e, v) => setcityInputText(v)}\r\n          key={\"cities\"}\r\n          id=\"cityList\"\r\n          options={cityOptions}\r\n          getOptionLabel={(option) => option.name}\r\n          renderInput={(params) => (\r\n            <TextField {...params} label=\"City\" variant=\"outlined\" />\r\n          )}\r\n          onChange={(e, v) => cityChange(v)}\r\n        />\r\n      </form>\r\n      <Button\r\n        id=\"runBtn\"\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={() => setWeather()}\r\n      >\r\n        Get local info!\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\nexport default Form;\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { DataProvider } from \"./DataContext\";\r\nimport DataDisplay from \"./DataDisplay.js\";\r\nimport Form from \"./components/Form\";\r\n\r\nfunction App() {\r\n  const data = useState(\"\");\r\n\r\n  return (\r\n    <DataProvider>\r\n      <div className=\"App\">\r\n        <Form />\r\n        <span className=\"separator\"></span>\r\n        <DataDisplay />\r\n      </div>\r\n    </DataProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}